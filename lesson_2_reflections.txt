What happens when you initialize a repository? Why do you need to do it?
		Git generate a .git file and we need to use init to tell the git 
		version control that we want to track the history of the current
		directory.
How is the staging area different from the working directory and the repository? What value do you think it offers?
		Staging area is an intermediate space that allow us to track the 
		specific files in staging area. It help us to track each logical
		change at a time instead of track all the files in the working directory.
How can you use the staging area to make sure you have one commit per logical change?
		I am not sure what I have written about commit is true. I have to test it. Yes, now I know that if i changed the file after i add it to staging area, nothing I can commit.
		If i change the files before I add them to staging area, then I can commit them directly. 
		However, as long as I made some changes, using git status will tell me what happened. 
		If i  have not added them to staging area, the color is red.
		If i have added them to the staging area after I changed the files, the color is green.
		Through this way, no matter how many changes I have made, I can only add the related files in one logic to the staging area and 
		commit them together. For the rest change, I could use another commit to commmit them in the other logic change.
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
		If I want to do some experimental features that I dont want to 
		make it in the update. I can use the branch to try those things.
		Branches can help me keep the correct main/master version and 
		at the same time I can try my new ideas in branches.
How do the diagrams help you visualize the branch structure?
		The diagrams show the whole structure of the branches. 
		It is more clear to give me an idea how I can trance different commits in different branches.
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
		Pros of automatic merging are: simple and easy to keep different 
		changes made by different commits. 
		Pros of manually merging are: if there exists conflicts, we can
		resolve the conflicts efficiently by ourselves and avoid unnecessay bugs and unwantted things.


